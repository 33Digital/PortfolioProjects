    --Imported Dataset

SELECT * 
FROM IMDBTop250MoviesCleanedIMDBTop250Movies;

    --Rename Table

SELECT * 
FROM IMDBTop250MoviesCleanedIMDBTop250Movies;
ALTER TABLE IMDBTop250MoviesCleanedIMDBTop250Movies
RENAME TO Movies;

    --Analyzing Budget and Revenue
  /*Find the top 5 movies with the higest budgets*/

SELECT name, budget
FROM Movies
ORDER BY budget DESC LIMIT 5;

  /*Some of the movies in the list are foreign movies, so it is appropriate to adjust the budgets for non-USD currencies by converting their nudget to the approximate USD value.
  Princess Mononoke and 3 Idiots have foreign currencies on their budget.*/

--Princess Mononoke Movie Update 

UPDATE Movies
SET budget = REPLACE(budget,2400000000, 23500000);

--3 Idiots Movie Update

UPDATE Movies
SET budget = REPLACE(budget, 550000000, 6700000);

--Final Updated Results

SELECT name, budget
FROM Movies
ORDER BY budget DESC LIMIT 5;

    --Exploring Top Movies
  /*Find the top 5 highest-rated movies*/

 SELECT name, rating
 FROM Movies 
 ORDER BY rating DESC LIMIT 5;

  /*Find the top 5 box office hits*/

SELECT name, box_office
FROM Movies
GROUP BY name
ORDER BY box_office DESC
LIMIT 5;

    --Analyzing Profits
  /*Calculate the top 10 most profitable movies*/

SELECT name, budget, box_office, (box_office-budget) AS profit
FROM Movies
ORDER BY profit DESC
LIMIT 10;

    --Identifying Popular Genres
  /*Find the most popular genre in the dataset.*/

SELECT genre, COUNT(*) as genre_count
FROM (
  	SELECT TRIM(value) as genre
  	FROM Movies CROSS JOIN json_each('["' || REPLACE(genre, ',', '","') || '"]')
  )
  GROUP BY genre
  ORDER BY genre_count DESC
  LIMIT 5;

    --Directors with Most Movies
  /*Discover the top 10 directors with the most movies.*/

SELECT directors, COUNT(*) AS Number_of_movies
FROM Movies
GROUP BY directors
ORDER BY COUNT(*) DESC
LIMIT 10;
